events {
    worker_connections 1024;
}

http {
    upstream grafana {
        server grafana:3000;
    }
    
    upstream radar_api {
        server radar-api:5000;
    }

    # Kiosk mode server (public access)
    server {
        listen 80;
        server_name _;

        # Main kiosk page
        location / {
            root /usr/share/nginx/html;
            index kiosk.html;
        }

        # Weather dashboard route
        location /weather {
            return 302 /d/acad2190-8c1b-4473-bec2-c55d538127d0/weather-station-dashboard?kiosk=1&refresh=30s;
        }

        # Radar viewer route
        location /radar {
            root /usr/share/nginx/html;
            try_files /radar.html =404;
            
            # Allow iframe embedding
            add_header X-Frame-Options SAMEORIGIN;
            add_header Content-Security-Policy "frame-ancestors 'self'";
        }

        # Stations map route
        location /stations-map {
            root /usr/share/nginx/html;
            try_files /stations-map.html =404;
        }

        # Simple stations list route
        location /stations {
            root /usr/share/nginx/html;
            try_files /stations-simple.html =404;
        }


        # Dashboard endpoint (proxy to Grafana)
        location /d/ {
            proxy_pass http://grafana/d/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Remove edit capabilities for kiosk mode
            proxy_hide_header X-Frame-Options;
            add_header X-Frame-Options SAMEORIGIN;
            
            # Security headers
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
        }

        # API endpoint for data (read-only)
        location /api/ {
            proxy_pass http://grafana/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Only allow GET and POST for queries (read-only)
            limit_except GET POST {
                deny all;
            }
        }

        # Static assets
        location /public/ {
            proxy_pass http://grafana/public/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Radar API endpoints
        location /api/radar/ {
            proxy_pass http://radar_api/api/radar/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers for browser access
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # Health check endpoint
        location /health {
            proxy_pass http://radar_api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    
}